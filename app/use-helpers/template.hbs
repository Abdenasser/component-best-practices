<h1>You don't always need a component</h1>
<p class="lead">Helpers are great for intermediate values and other <em>composable</em> bits of functionality, particularly when they don't require their own element.</p>

<div class="row">
  <div class="col-md-6">
    <h2>Simple helpers</h2>
    <p>These helpers are simple JavaScript functions.</p>

    <table class="table table-bordered">
      <thead>
        <tr>
          <th>Handlebars template</th>
          <th>Evaluated</th>
        </tr>
      </thead>

      <tbody>
        {{#each shoes as |shoe|}}
          <tr>
            <td><code>\{{get shoe "size"}}</code></td>
            <td>{{get shoe "size"}}</td>
          </tr>
          <tr>
            <td><code>\{{contains shoes shoe}}</code></td>
            <td>{{contains shoes shoe}}</td>
          </tr>
          <tr>
            <td><code>\{{concat "Name: " (get shoe "name")}}</code></td>
            <td>{{concat "Name: " (get shoe "name")}}</td>
          </tr>
        {{/each}}
      </tbody>
    </table>
  </div>

  <div class="col-md-6">
    <h2>Full helpers</h2>
    <p>These helpers are Ember.Objects under the hood, and thus can have injected services and more.</p>

    <div class="form-group">
      <label for="change-user-shoe-size">Your shoe size</label>
      {{one-way-input
          class="form-control"
          type="number"
          step="1"
          value=session.currentUser.shoeSize
          update=(action (mut session.currentUser.shoeSize))
      }}
    </div>

    <table class="table table-bordered">
      <thead>
        <tr>
          <th>Handlebars template</th>
          <th>Evaluated</th>
          <th>Shoe Size (US)</th>
        </tr>
      </thead>

      <tbody>
        {{#each shoes as |shoe|}}
          <tr class={{if (user-can-wear shoe) "success"}}>
            <td><code>\{{user-can-wear shoe}}</code></td>
            <td>{{user-can-wear shoe}}</td>
            <td>{{shoe.size}}</td>
          </tr>
        {{/each}}
      </tbody>
    </table>
  </div>
</div>
