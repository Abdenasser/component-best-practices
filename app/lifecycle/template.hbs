<h1>Using the new component lifecycle hooks</h1>
<p class="lead">These new hooks let you implement DDAU architecture. As a general rule of thumb, you should not modify a component's internal or external properties inside of the <code>{will,did}{Render,Update}</code> hooks. This will cause performance degradation and potentially an infinite loop.</p>

<p class="lead">Instead, use the <code>did{init,receive,update}Attrs</code> hooks â€“ this encourages the DDAU pattern by explicitly passing data and actions into your component as <code>attrs</code>.</p>

<div class="row">
  <div class="col-md-3">
    <h2>Component Playground</h2>
    <p>Try updating some of these components to see when and how the hooks are invoked.</p>

    {{lifecycle/base-example external=foo}}
    {{!-- {{lifecycle/base-example external=bar}}
    {{lifecycle/base-example external=baz}} --}}
  </div>

  <div class="col-md-9">
    <h3>Render Events</h3>
    <table class="table block">
      <thead>
        <tr>
          <th>Element ID</th>
          <th>Event</th>
          <th>Timing (ms)</th>
        </tr>
      </thead>

      <tbody>
        {{#each lifecycleEvents.renderEvents as |renderEvent|}}
          <tr title={{renderEvent.loggedAt}}>
            <td>{{renderEvent.id}}</td>
            <td><code>{{renderEvent.eventName}}</code></td>
            <td>{{math-tofixed renderEvent.timing 2}}</td>
          </tr>
        {{/each}}
      </tbody>
    </table>

    <h3>Attributes Updated</h3>
    <table class="table block">
      <thead>
        <tr>
          <th>Element ID</th>
          <th>Event</th>
          <th>Params</th>
        </tr>
      </thead>

      <tbody>
        {{#each lifecycleEvents.attrEvents as |attrEvent|}}
          <tr title={{attrEvent.loggedAt}}>
            <td>{{attrEvent.id}}</td>
            <td><code>{{attrEvent.eventName}}</code></td>
            <td><pre>{{json-stringify attrEvent.params 2}}</pre></td>
          </tr>
        {{/each}}
      </tbody>
    </table>
  </div>
</div>